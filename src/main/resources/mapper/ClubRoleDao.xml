<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gudt.imis.clubmanageis.dao.ClubRoleDao">
  <resultMap id="BaseResultMap" type="com.gudt.imis.clubmanageis.model.entity.ClubRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="club_id" jdbcType="VARCHAR" property="clubId" />
    <result column="user_role" jdbcType="INTEGER" property="userRole" />
    <result column="user_alias" jdbcType="VARCHAR" property="userAlias" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, club_id, user_role, user_alias, update_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from club_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from club_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.gudt.imis.clubmanageis.model.entity.ClubRole" useGeneratedKeys="true">
    insert into club_role (user_id, club_id, user_role, 
      user_alias, update_time, create_time
      )
    values (#{userId,jdbcType=VARCHAR}, #{clubId,jdbcType=VARCHAR}, #{userRole,jdbcType=INTEGER}, 
      #{userAlias,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.gudt.imis.clubmanageis.model.entity.ClubRole" useGeneratedKeys="true">
    insert into club_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="clubId != null">
        club_id,
      </if>
      <if test="userRole != null">
        user_role,
      </if>
      <if test="userAlias != null">
        user_alias,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="clubId != null">
        #{clubId,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null">
        #{userRole,jdbcType=INTEGER},
      </if>
      <if test="userAlias != null">
        #{userAlias,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gudt.imis.clubmanageis.model.entity.ClubRole">
    update club_role
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="clubId != null">
        club_id = #{clubId,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null">
        user_role = #{userRole,jdbcType=INTEGER},
      </if>
      <if test="userAlias != null">
        user_alias = #{userAlias,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gudt.imis.clubmanageis.model.entity.ClubRole">
    update club_role
    set user_id = #{userId,jdbcType=VARCHAR},
      club_id = #{clubId,jdbcType=VARCHAR},
      user_role = #{userRole,jdbcType=INTEGER},
      user_alias = #{userAlias,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>